(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{219:function(t,r,a){"use strict";a.r(r);var i=a(0),v=Object(i.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-系列","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 系列")]),t._v(" "),a("h2",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Type.html"}},[t._v("类型")])],1),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#原始类型"}},[t._v("原始类型")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#原始类型"}},[t._v("对象类型")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#typeof和instanceof"}},[t._v("typeof 和 instanceof")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#类型转换"}},[t._v("类型转换")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#四则运算符"}},[t._v("四则运算符")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Type.html#比较运算符"}},[t._v("比较运算符")])],1)]),t._v(" "),a("h2",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/This.html"}},[t._v("this")])],1),t._v(" "),a("ul",[a("li",[t._v("直接声明的函数默认是指向"),a("code",[t._v("window")]),t._v(",一个对象上声明的函数，默认是指向该对象。函数的"),a("code",[t._v("this")]),t._v("默认指向改函数的调用者")]),t._v(" "),a("li",[t._v("非箭头函数的情况下，哪怕一个函数声明的地方在一个对象的某个方法内部，也默认指向"),a("code",[t._v("window")]),t._v("。")]),t._v(" "),a("li",[t._v("对于"),a("code",[t._v("new")]),t._v("方式实例化的方法，"),a("code",[t._v("this")]),t._v("永远被绑定到了该对象上,不会被任何方式所改变。")]),t._v(" "),a("li",[t._v("箭头函数中的 "),a("code",[t._v("this")]),t._v(" 只取决包裹箭头函数的第一个普通函数的 "),a("code",[t._v("this")]),t._v("，对箭头函数使用 "),a("code",[t._v("bind")]),t._v(" 这类函数是无效的")]),t._v(" "),a("li",[a("code",[t._v("bind")]),t._v(" 中 "),a("code",[t._v("this")]),t._v(" 取决于第一个参数,如果第一个参数为空,那么就是 "),a("code",[t._v("window")]),t._v(" 。如果对一个函数进行多次 "),a("code",[t._v("bind")]),t._v(", 该函数的 "),a("code",[t._v("this")]),t._v(" 只取决于第一次的 "),a("code",[t._v("bind")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/This.html"}},[t._v("闭包")])],1),t._v(" "),a("p",[t._v("定义：函数 A 内部有一个函数 B,函数 B 可以访问到函数 A 中的变量，那么函数 B 就是闭包。")]),t._v(" "),a("pre",[a("code",[t._v("闭包存在的意义就是让我们可以间接访问函数内部的变量。\n")])]),t._v(" "),a("h2",{attrs:{id:"深浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深浅拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Copy.html"}},[t._v("深浅拷贝")])],1),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Copy.html#浅拷贝常用方法"}},[t._v("浅拷贝常用方法")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Copy.html#深拷贝"}},[t._v("深拷贝")])],1)]),t._v(" "),a("h2",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Prototype.html"}},[t._v("原型链")])],1),t._v(" "),a("ol",[a("li",[t._v("原型就是一个对象,并且这个对象中包含了很多函数。结论：对于 "),a("code",[t._v("obj")]),t._v(" 来说，可以通过 "),a("code",[t._v("__proto__")]),t._v(" 找到 y 一个原型对象, 在该对象中定义了很多函数让我们使用。")]),t._v(" "),a("li",[t._v("原型的 constructor 属性指向构造函数，构造函数又通过 prototype 属性指回原型，但是并不是所有函数都具有这个属性，Function.prototype.bind() 就没有这个属性。")]),t._v(" "),a("li",[t._v("原型链就是多个对象通过 "),a("strong",[t._v("proto")]),t._v(" 的方式连接了起来。为什么 obj 可以访问到 valueOf 函数，就是因为 obj 通过原型链找到了 valueOf 函数。")])]),t._v(" "),a("h2",{attrs:{id:"es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/ES6.html"}},[t._v("ES6")])],1),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#var、let及const区别"}},[t._v("var、let 及 const 区别")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#原型继承和Class继承"}},[t._v("原型继承和 Class 继承")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#模块化"}},[t._v("模块化")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#Object.is()"}},[t._v("Object.is()")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#迭代器"}},[t._v("迭代器")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/ES6.html#Proxy"}},[t._v("Proxy")]),t._v(" 待完善...")],1)]),t._v(" "),a("h2",{attrs:{id:"js-异步编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-异步编程","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Async.html"}},[t._v("JS 异步编程")])],1),t._v(" "),a("ol",[a("li",[t._v("并发与并行")]),t._v(" "),a("li",[t._v("回调函数")]),t._v(" "),a("li",[t._v("Generator")]),t._v(" "),a("li",[t._v("Promise")]),t._v(" "),a("li",[t._v("async 及 await")]),t._v(" "),a("li",[t._v("常用定时器函数")])]),t._v(" "),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Promise.html"}},[t._v("Promise")])],1),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Promise.html#Promise理解"}},[t._v("Promise 理解")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Promise.html#Promise对象方法"}},[t._v("Promise 对象方法")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Promise.html#Promise的静态方法"}},[t._v("Promise 的静态方法")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/Promise.html#手写实现Promise"}},[t._v("手写实现 Promise")])],1)]),t._v(" "),a("h2",{attrs:{id:"event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-loop","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/EventLoop.html"}},[t._v("Event Loop")])],1),t._v(" "),a("h2",{attrs:{id:"js-进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-进阶","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html"}},[t._v("JS 进阶")])],1),t._v(" "),a("ol",[a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#手写call、apply和bind函数"}},[t._v("手写 call、apply 和 bind 函数")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#new"}},[t._v("new 原理")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#instanceof原理"}},[t._v("instanceof 原理")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#为什么0.1+0.2!=0.3?"}},[t._v("为什么 0.1+0.2!=0.3?")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#垃圾回收机制"}},[t._v("垃圾回收机制")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#经常忽略掉运算符"}},[t._v("经常忽略掉运算符")])],1),t._v(" "),a("li",[a("router-link",{attrs:{to:"/front/JavaScript/JS进阶.html#JS进制转换"}},[t._v("JS 进制转换")])],1)]),t._v(" "),a("h2",{attrs:{id:"浏览器知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器知识点","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/浏览器知识点.html"}},[t._v("浏览器知识点")])],1),t._v(" "),a("p",[t._v("暂未编写...")]),t._v(" "),a("h2",{attrs:{id:"js-常见的设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-常见的设计模式","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/JS常见的设计模式.html"}},[t._v("JS 常见的设计模式")])],1),t._v(" "),a("h2",{attrs:{id:"常见的数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/常见的数据结构.html"}},[t._v("常见的数据结构")])],1),t._v(" "),a("h2",{attrs:{id:"js-原理探索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-原理探索","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/JS原理探索.html"}},[t._v("JS 原理探索")])],1),t._v(" "),a("h2",{attrs:{id:"react-理解和常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-理解和常见问题","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/React.html"}},[t._v("React 理解和常见问题")])],1),t._v(" "),a("h2",{attrs:{id:"redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("router-link",{attrs:{to:"/front/JavaScript/Redux.html"}},[t._v("Redux")])],1)])}),[],!1,null,null,null);r.default=v.exports}}]);