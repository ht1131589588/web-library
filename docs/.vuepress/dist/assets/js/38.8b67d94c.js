(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{252:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("h2",{attrs:{id:"模式修饰符参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模式修饰符参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 模式修饰符参数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("i")]),t._v(": 忽略大小写")]),t._v(" "),s("li",[s("code",[t._v("g")]),t._v(": 全局匹配")]),t._v(" "),s("li",[s("code",[t._v("m")]),t._v(": 多行匹配")]),t._v(" "),s("li",[s("code",[t._v("y")]),t._v(": 执行“粘性”搜索,匹配从目标字符串的当前位置开始，可以使用 y 标志")]),t._v(" "),s("li",[s("code",[t._v("s")]),t._v(": ES2018 新特性，默认的圆点"),s("code",[t._v(".")]),t._v("是匹配除换行符"),s("code",[t._v("\\n")]),t._v("之外的任何单字符，加上"),s("code",[t._v("s")]),t._v("之后，"),s("code",[t._v(".")]),t._v("中包含换行符")]),t._v(" "),s("li",[s("code",[t._v("u")]),t._v(": ES2015 新特性，"),s("code",[t._v("u")]),t._v("是"),s("code",[t._v("unicode")]),t._v("的缩写。有一些 Unicode 字符超过一个字节，正则就无法正确的识别它们。"),s("code",[t._v("u")]),t._v("就是用来处理这些不常见的情况的")])]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" 和 "),s("code",[t._v("g")]),t._v(" 比较常用，也很好明白，这里解释一下 "),s("code",[t._v("m")]),t._v(" :\n若存在换行\\n，并且有开始^或结束$符的情况下，和 g 一起使用实现全局匹配，\n比如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// m 修饰符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloworld\\nhellochina'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^hello/g")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^hello/gm")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出为：['hello']")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出为：['hello','hello']")]),t._v("\n")])])]),s("p",[s("code",[t._v("y")]),t._v("修饰符主要需要注意一些规则：")]),t._v(" "),s("ul",[s("li",[t._v("第一次成功匹配的位置一定要是字符串开头，否则不会进行下去")]),t._v(" "),s("li",[t._v("正则表达式会记录当前匹配的位置，所以需要先声明正则表达式")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次成功匹配的位置一定要是字符串开头，否则不会进行下去")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\wg/y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必须先声明regx 否则 每次都会是新的正则表达式，结果不会出现变化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\wag/y")]),t._v("\nregx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["bag", index: 0, input: "bagtagmag", groups: undefined]')]),t._v("\nregx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["tag", index: 3, input: "bagtagmag", groups: undefined]')]),t._v("\nregx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["mag", index: 6, input: "bagtagmag", groups: undefined]')]),t._v("\nregx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\wag/y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\wag/y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bagtagmag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 不管执行多少次结果都为：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["bag", index: 0, input: "bagtagmag", groups: undefined]')]),t._v("\n")])])]),s("h2",{attrs:{id:"有关正则校验的-6-个方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有关正则校验的-6-个方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 有关正则校验的 6 个方法")]),t._v(" "),s("h3",{attrs:{id:"两个测试方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个测试方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 两个测试方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("test")])]),t._v(" "),s("li",[s("code",[t._v("exec")])])]),t._v(" "),s("h3",{attrs:{id:"四个正则表达式方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四个正则表达式方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 四个正则表达式方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("match(pattern)")])]),t._v(" "),s("li",[s("code",[t._v("searcch(pattern)")])]),t._v(" "),s("li",[s("code",[t._v("replace(pattern)")])]),t._v(" "),s("li",[s("code",[t._v("split(pattern)")])])]),t._v(" "),s("h2",{attrs:{id:"常用的正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用的正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用的正则表达式")]),t._v(" "),s("h2",{attrs:{id:"参考链接："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接：","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5bda4e6fe51d45681f245274",target:"_blank",rel:"noopener noreferrer"}},[t._v("一次性搞懂 JavaScript 正则表达式之语法"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);