(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{211:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux","aria-hidden":"true"}},[e._v("#")]),e._v(" Redux")]),e._v(" "),r("h2",{attrs:{id:"redux注意事项"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux注意事项","aria-hidden":"true"}},[e._v("#")]),e._v(" Redux注意事项")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("store")]),e._v(" 是唯一的")]),e._v(" "),r("li",[e._v("只有 "),r("code",[e._v("store")]),e._v(" 能改变自己的内容")]),e._v(" "),r("li",[r("code",[e._v("reducer")]),e._v(" 必须是纯函数， "),r("code",[e._v("reducer")]),e._v(" 可以接收 "),r("code",[e._v("state")]),e._v(" ，但是决不能修改 "),r("code",[e._v("state")]),e._v(" ，给固定的输入，就一定会有固定的输出，而不会有任何副作用（不能在reducer中使用定时器，请求ajax等）")])]),e._v(" "),r("h2",{attrs:{id:"常用方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 常用方法")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("createStore")]),e._v(" 创建store")]),e._v(" "),r("li",[r("code",[e._v("store.dispatch")]),e._v(" 派发action给store")]),e._v(" "),r("li",[r("code",[e._v("store.getState")]),e._v(" 获取store中的所有数据")]),e._v(" "),r("li",[r("code",[e._v("store.subscribe")]),e._v(" 订阅store数据的改变,只要store数据改变就会调用传入 "),r("code",[e._v("store.subscribe")]),e._v(" 的回调函数")])]),e._v(" "),r("h2",{attrs:{id:"是么是redux中间件？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是么是redux中间件？","aria-hidden":"true"}},[e._v("#")]),e._v(" 是么是redux中间件？")]),e._v(" "),r("p",[e._v("对dispatch方法进行升级")]),e._v(" "),r("ul",[r("li",[e._v("redux-thunk 判断传入的方法是对象还是函数，是对象就派发action，是函数就执行函数，把异步操作放在action中操作")])])])}),[],!1,null,null,null);t.default=s.exports}}]);